---
  - name: Install required docker system packages
    apt:
      name: {{ item }}
      state: latest
      update_cache: yes
    loop:
      - 'ca-certificates'
      - 'curl'
      - 'gnupg'
      - 'lsb-release'
  - name: Add Docker GPG apt Key
    shell: curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
  - name: Add Docker Repo
    shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
  - name: Install Docker Engine
    apt:
      name: {{ item }}
      state: latest
      update_cache: yes
    loop:
      - 'docker-ce'
      - 'docker-ce-cli'
      - 'containerd.io'
      - 'docker-compose-plugin'
  # - name: CURL docker shell script
  #   shell:
  #     chdir: /home/ubuntu
  #     cmd: curl -fsSL https://get.docker.com -o get-docker.sh
  #   when: docker_installed.failed
  # - name: Execute docker shell script
  #   shell:
  #     chdir: /home/ubuntu
  #     cmd: sh get-docker.sh
  #   when: docker_installed.failed
  - name: Ensure docker group is created
    group:
      name: docker
      state: present
  - name: Add '{{ user }}' user to group docker
    user:
      name: '{{ user }}'
      groups: docker
      append: yes
  - name: Install Docker compose
    apt:
      name: docker-compose
      update_cache: yes
  - name: Create docker folder in ubuntu home folder along with subdirectories
    file:
      path: "{{ item }}"
      state: directory
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0775
    loop:
      - /home/ubuntu/docker
      - /home/ubuntu/docker/products
      - /home/ubuntu/docker/website
  - name: Copy Docker-compose file to docker folder
    copy:
      src: files/docker-compose.yaml
      dest: /home/ubuntu/docker
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0755
  - name: Copy index file to docker/website folder
    copy:
      src: files/index.php
      dest: /home/ubuntu/docker/website
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0755
  - name: Copy dockerfile, requirements and api file to docker/products folder
    copy:
      src: files/{{item}}
      dest: /home/ubuntu/docker/products
      owner: "{{ user }}"
      group: "{{ user }}"
      mode: 0755
    with_items:
      ['api.py', 'requirements.txt', 'Dockerfile']
  - name: Execute docker compose to build services
    shell:
      chdir: /home/ubuntu/docker
      cmd: docker-compose up -d
